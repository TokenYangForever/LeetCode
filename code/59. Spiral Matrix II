/**
 * @param {number} n
 * @return {number[][]}
 */
var generateMatrix = function(n) {
    if (!n) {
        return []
    }
    let dp = []
    for (let i = 0; i < n; i++) {
        dp[i] = []
    }
    let x = 0
    let y = 1
    dp[0][0] = 1
    let target = 'right'
    for (let i = 2; i <= n * n; i++) {
        dp[x][y] = i
        switch (target) {
            case 'right':
                if (y == n - 1 || dp[x][y + 1]) {
                    x++
                    target = 'down'
                } else {
                    y++
                }
                break
            case 'down':
                if (x == n - 1 || dp[x + 1][y]) {
                    y--
                    target = 'left'
                } else {
                    x++
                }
                break
            case 'left':
                if (y == 0 || dp[x][y - 1]) {
                    x--
                    target = 'top'
                } else {
                    y--
                }
                break
            case 'top':
                if (x == 0 || dp[x - 1][y]) {
                    target = 'right'
                    y++
                } else {
                    x--
                }
                break
        }
    }
    return dp
};
